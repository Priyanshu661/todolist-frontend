{"version":3,"sources":["components/Login.jsx","components/Body.jsx","components/signUp.jsx","components/App.jsx","components/useToken.jsx","index.js"],"names":["Login","props","useState","email","password","user","setUser","err","setErr","handleChange","event","target","name","value","pre","className","style","borderRadius","color","htmlFor","onChange","type","id","onClick","requestOptions","method","headers","body","JSON","stringify","length","fetch","then","response","json","data","setToken","href","Body","item","setItem","handleSubmit","itemList","map","todoItem","index","key","token","console","log","handleDelete","handleDeleteAccount","handleLogout","SignUp","redirect","setRedirect","to","backgroundImage","options","i","App","setItems","tokenString","localStorage","getItem","userToken","parse","_id","getToken","useToken","useEffect","newData","todos","fetchData","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"gQA2IeA,MAtIf,SAAeC,GAEX,MAAqBC,mBAAS,CAC1BC,MAAM,GACNC,SAAS,KACX,mBAHKC,EAAI,KAACC,EAAO,KAKnB,EAAmBJ,mBAAS,IAAG,mBAAxBK,EAAG,KAACC,EAAM,KAOjB,SAASC,EAAaC,GAC1B,IAAI,EAAaA,EAAMC,OAAlBC,EAAI,EAAJA,KAAKC,EAAK,EAALA,MAGVP,GAAQ,SAACQ,GACN,OAAO,2BACFA,GAAG,kBACNF,EAAMC,OAiDX,OAIA,6BAASE,UAAU,0BACjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,8DACb,6BACE,yBAAKA,UAAU,0BAA0BC,MAAO,CAACC,aAAc,SAC7D,yBAAKF,UAAU,6BAEb,yBAAKA,UAAU,wBAEb,wBAAIA,UAAU,+BAA8B,SAC5C,uBAAGA,UAAU,sBAAqB,yCAClC,uBAAGC,MAAO,CAACE,MAAM,QAASX,GAE1B,yBAAKQ,UAAU,gCACf,2BAAOA,UAAU,aAAaI,QAAQ,cAAa,SACjD,2BAAOP,KAAK,QAAQQ,SAAUX,EAAcY,KAAK,QAAQC,GAAG,aAAaP,UAAU,kCAIrF,yBAAKA,UAAU,gCACf,2BAAOA,UAAU,aAAaI,QAAQ,iBAAgB,YACpD,2BAAOP,KAAK,WAAWQ,SAAUX,EAAcY,KAAK,WAAWC,GAAG,gBAAgBP,UAAU,kCAG/F,6BAGC,4BAAQA,UAAU,oCAAoCM,KAAK,SAASE,QAxEhF,WAGE,IAAMC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACpB1B,MAAME,EAAKF,MACXC,SAASC,EAAKD,YAIS,IAArBC,EAAKF,MAAM2B,QAAuC,IAAxBzB,EAAKD,SAAS0B,OACzCC,MAAM,0CAA2CP,GAChDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEa,IAAdA,EAAKL,OACN7B,EAAMmC,SAASD,EAAK,IAGf3B,EAAO,iCAQlBA,EAAO,8BA2C4F,SAE3F,yBAAKO,UAAU,uDACb,uBAAGsB,KAAK,KAAKtB,UAAU,cAAa,uBAAGA,UAAU,6BACjD,uBAAGsB,KAAK,KAAKtB,UAAU,cAAa,uBAAGA,UAAU,oCACjD,uBAAGsB,KAAK,KAAKtB,UAAU,cAAa,uBAAGA,UAAU,2BAKrD,6BACE,uBAAGA,UAAU,QAAO,0BAAuB,uBAAGsB,KAAK,UAAUtB,UAAU,yBAAwB,oBCpC9FuB,MA9Ef,SAAcrC,GAEV,MAAwBC,mBAAS,IAAG,mBAA7BqC,EAAI,KAAEC,EAAO,KAkCxB,OAEI,yBAAKzB,UAAU,QACnB,yBAAKA,UAAU,aAGf,yBAAKA,UAAU,WACb,4BAAI,eAEN,yBAAKA,UAAU,QACb,2BAAOK,SA1CL,SAAsBV,GAClB,IAAQG,EAAUH,EAAMC,OAAhBE,MAER2B,EAAQ3B,IAuCiBA,MAAO0B,EAAMlB,KAAK,SACjD,4BAAQN,UAAU,SAASQ,QAAS,WACpCtB,EAAMwC,aAAaF,GACnBC,EAAQ,MAEN,8BAAM,SAGV,6BACE,4BACGvC,EAAMyC,SAASC,KAAI,SAACC,EAASC,GAC5B,OACE,yBAAKC,IAAKD,GACZ,wBAAIC,IAAKD,GAAQD,EAAS,IAAC,4BAAQrB,QAAS,kBA/C5C,SAAsBgB,GAIpB,IAAMf,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACrBP,GAAGrB,EAAM8C,MACTnC,KAAK2B,KAKNR,MAAM,gDAAiDP,GACrDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACLa,QAAQC,IAAId,MA8BgCe,CAAaN,IAAY7B,UAAU,gBAAe,aAUzG,6BACA,4BAAQQ,QAAS,kBAAKtB,EAAMkD,uBAAwBpC,UAAU,iBAAgB,8BAAM,mBACpF,4BAAQQ,QAAS,kBAAKtB,EAAMmD,gBAAiBrC,UAAU,UAAS,IAAC,8BAAM,a,OCgFxDsC,MAnJf,SAAgBpD,GACZ,MAAqBC,mBAAS,CAC1BC,MAAM,GACNC,SAAS,KACX,mBAHKC,EAAI,KAACC,EAAO,KAMnB,EAA6BJ,oBAAS,GAAM,mBAArCoD,EAAQ,KAACC,EAAW,KAC3B,EAAmBrD,mBAAS,IAAG,mBAAxBK,EAAG,KAACC,EAAM,KAGrB,SAASC,EAAaC,GACd,IAAI,EAAaA,EAAMC,OAAlBC,EAAI,EAAJA,KAAKC,EAAK,EAALA,MAEdP,GAAQ,SAACQ,GACF,OAAO,2BACFA,GAAG,kBACNF,EAAMC,OA0Cf,OAAGyC,EAGF,kBAAC,IAAQ,CAACE,GAAG,MAYd,6BAEA,6BAAUzC,UAAU,kBACtBC,MAAO,CAACyC,gBAAiB,kFACzB,yBAAK1C,UAAU,0DACb,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,8DACb,6BACE,yBAAKA,UAAU,OAAOC,MAAO,CAACC,aAAc,SAC1C,yBAAKF,UAAU,iBACb,wBAAIA,UAAU,mCAAkC,qBAEhD,uBAAGC,MAAO,CAACE,MAAM,SAAUX,GAE3B,8BAOE,yBAAKQ,UAAU,qBACb,2BAAOK,SAAUX,EAAcG,KAAK,QAAQS,KAAK,QAAQC,GAAG,kBAAkBP,UAAU,iCACxF,2BAAOA,UAAU,aAAaI,QAAQ,mBAAkB,eAG1D,yBAAKJ,UAAU,qBACb,2BAAOK,SAAUX,EAAcG,KAAK,WAAaS,KAAK,WAAWC,GAAG,kBAAkBP,UAAU,iCAChG,2BAAOA,UAAU,aAAaI,QAAQ,mBAAkB,aAe1D,yBAAKJ,UAAU,iCACb,4BAAQM,KAAK,SAASE,QA9FpC,WAEI,IAAMmC,EAAU,CACZjC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACrB1B,MAAME,EAAKF,MACXC,SAASC,EAAKD,YAGhB2B,MAAM,gDAAiD2B,GACtD1B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEDA,EAAK5B,IAENC,EAAO2B,EAAK5B,MAIZN,EAAMmC,SAASD,GACdoB,GAAY,QA0EPxC,UAAU,gEAA+D,aAG7E,uBAAGA,UAAU,oCAAmC,4BAAyB,uBAAGsB,KAAK,IAC7EtB,UAAU,qBAAoB,2BAAG,0B,yBClIrD,kmGAAA4C,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAyKeC,MA/Jf,WAGA,MAA6B1D,mBAAS,IAAG,mBAAlCwC,EAAQ,KAAEmB,EAAQ,KAEzB,ECde,WACb,IAMA,EAA0B3D,mBANT,WACf,IAAM4D,EAAcC,aAAaC,QAAQ,SACnCC,EAA4B,cAAhBH,EAA6BlC,KAAKsC,MAAMJ,GAAa,KACvE,OAAgB,OAATG,QAAS,IAATA,OAAS,EAATA,EAAWE,IAGeC,IAAW,mBAAvCrB,EAAK,KAAEX,EAAQ,KAOtB,MAAO,CACLA,SANgB,SAAA6B,GAChBF,aAAavB,QAAQ,QAASZ,KAAKC,UAAUoC,IAC7C7B,EAAS6B,EAAUE,MAKnBpB,SDFmBsB,GAAhBtB,EAAK,EAALA,MAAMX,EAAQ,EAARA,SA+Eb,OA5EAkC,qBAAU,WACR,IAAMZ,EAAU,CACVjC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACrBP,GAAGyB,KAUNA,GAPY,uCAAC,sGACOhB,MAAM,8CAA8C2B,GAAS,KAAD,EAAnE,OAARzB,EAAS,EAAD,cACMA,EAASC,OAAO,KAAD,EAA7BqC,EAAQ,EAAD,KACZV,EAASU,EAAQC,OAAM,2CAEzB,kBALc,kCAQbC,KAGF,CAAC/B,EAASK,IAyDTA,EAIC,6BAGI,kBAAC,IAAM,KAEP,6BAeA,kBAAC,IAAM,KACL,kBAAC,IAAK,CAAC2B,OAAK,EAACC,KAAK,IAAIC,QAAS,kBAAE,EAAI,CAACxB,aArChD,WACEW,aAAavB,QAAQ,QAASZ,KAAKC,UAAU,KAC7CO,EAAS,KAmCiEK,aA5D5E,SAAsBF,GACpB,IAAMf,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACrBP,GAAGyB,EACHR,KAAKA,KAKNR,MAAM,6CAA8CP,GAClDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GACNa,QAAQC,IAAId,GACX0B,EAAS1B,EAAK,GAAGqC,WA6CoF9B,SAAUA,EAAUK,MAAOA,EAAOI,oBA/EzI,WAEC,IAAM3B,EAAiB,CACrBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACrBP,GAAGyB,KAKJhB,MAAM,uDAAwDP,GAC5DQ,KAAK+B,aAAavB,QAAQ,QAASZ,KAAKC,UAAU,KAAMO,EAAS,UAqE7D,kBAAC,IAAK,CAACsC,OAAK,EAACC,KAAK,UAAUC,QAAS,kBAAC,EAAM,CAACxC,SAAUA,UAkBtD,6BAER,kBAAC,IAAM,KACP,6BACA,kBAAC,IAAM,KAEJ,kBAAC,IAAK,CAACsC,OAAK,EAACC,KAAK,IAAIC,QAAS,kBAAC,EAAK,CAACf,SAAUA,EAAUzB,SAAUA,MACrE,kBAAC,IAAK,CAACsC,OAAK,EAACC,KAAK,UAAUC,QAAS,kBAAC,EAAM,CAACxC,SAAUA,WE/I3DyC,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,W","file":"static/js/main.482578db.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\"\r\n\r\n\r\n\r\nfunction Login(props){\r\n\r\n    const [user,setUser]=useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    })\r\n\r\n    const [err,setErr]=useState(\"\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function handleChange(event){\r\nvar {name,value}=event.target;\r\n  \r\n\r\nsetUser((pre)=>{\r\n   return {\r\n     ...pre,\r\n    [name]:value\r\n   }\r\n\r\n})\r\n\r\n    }\r\n\r\n    \r\n  function handleSubmit(){\r\n\r\n    \r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n       email:user.email,  \r\n       password:user.password\r\n      })\r\n      };\r\n\r\n      if(user.email.length !==0 && user.password.length !==0){\r\n        fetch('https://todo-backend-cx73.onrender.com/', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n         \r\n          if(data.length!==0){\r\n            props.setToken(data[0])\r\n          }\r\n          else{\r\n                 setErr(\"Invalid Email or Password!\")\r\n          }\r\n          \r\n         \r\n      });\r\n\r\n      }\r\n     else{\r\n      setErr(\"Enter email and password\")\r\n     }\r\n  \r\n  \r\n\r\n     \r\n     \r\n  }\r\n\r\n\r\n\r\n// className=\"col-12 col-md-8 col-lg-6 col-xl-5\"\r\nreturn (\r\n\r\n\r\n\r\n<section className=\"vh-100 gradient-custom\">\r\n  <div className=\"container py-5 h-100\" >\r\n    <div className=\"row d-flex justify-content-center align-items-center h-100\" >\r\n      <div >\r\n        <div className=\"card bg-dark text-white\" style={{borderRadius: \"1rem\"}}>\r\n          <div className=\"card-body p-5 text-center\" >\r\n\r\n            <div className=\"mb-md-5 mt-md-4 pb-5\">\r\n\r\n              <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n              <p className=\"text-white-50 mb-5\">Please enter your email and password!</p>\r\n              <p style={{color:\"red\"}}>{err}</p>\r\n\r\n              <div className=\"form-outline form-white mb-4\">\r\n              <label className=\"form-label\" htmlFor=\"typeEmailX\">Email</label>\r\n                <input name=\"email\" onChange={handleChange} type=\"email\" id=\"typeEmailX\" className=\"form-control form-control-lg\" />\r\n                \r\n              </div>\r\n\r\n              <div className=\"form-outline form-white mb-4\">\r\n              <label className=\"form-label\" htmlFor=\"typePasswordX\">Password</label>\r\n                <input name=\"password\" onChange={handleChange} type=\"password\" id=\"typePasswordX\" className=\"form-control form-control-lg\" />\r\n                \r\n              </div>\r\n             <br></br>\r\n              {/* <p className=\"small mb-5 pb-lg-2\"><a className=\"text-white-50\" href=\"#!\">Forgot password?</a></p> */}\r\n\r\n              <button className=\"btn btn-outline-light btn-lg px-5\" type=\"submit\" onClick={handleSubmit}>Login</button>\r\n\r\n              <div className=\"d-flex justify-content-center text-center mt-4 pt-1\">\r\n                <a href=\"#!\" className=\"text-white\"><i className=\"fab fa-facebook-f fa-lg\"></i></a>\r\n                <a href=\"#!\" className=\"text-white\"><i className=\"fab fa-twitter fa-lg mx-4 px-2\"></i></a>\r\n                <a href=\"#!\" className=\"text-white\"><i className=\"fab fa-google fa-lg\"></i></a>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div>\r\n              <p className=\"mb-0\">Don't have an account? <a href=\"/signup\" className=\"text-white-50 fw-bold\">Sign Up</a>\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n\r\n\r\n)\r\n\r\n}\r\n\r\nLogin.propTypes={\r\n  setToken:propTypes.func.isRequired,\r\n  setItems:propTypes.func\r\n}\r\n\r\nexport default Login;\r\n\r\n","import React ,{useState} from \"react\";\r\n\r\n\r\nfunction Body(props){\r\n\r\n    const [item, setItem] = useState(\"\");\r\n\r\n    function handleChange(event) {\r\n        const { value } = event.target;\r\n    \r\n        setItem(value);\r\n      }\r\n\r\n\r\n\r\n      function handleDelete(item){\r\n\r\n        // console.log(item)\r\n        // console.log(props.token)\r\n        const requestOptions = {\r\n          method: 'PATCH',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n          id:props.token,\r\n          name:item\r\n          })\r\n          };\r\n      \r\n      \r\n         fetch('https://todo-backend-cx73.onrender.com/delete', requestOptions)\r\n          .then(response => response.json())\r\n          .then(data =>{\r\n           console.log(data)\r\n           \r\n           \r\n        });\r\n      }\r\n    \r\n\r\nreturn(\r\n\r\n    <div className=\"body\" >\r\n<div className=\"containor\">\r\n\r\n\r\n<div className=\"heading\">\r\n  <h1>To-Do List</h1>\r\n</div>\r\n<div className=\"form\">\r\n  <input onChange={handleChange} value={item} type=\"text\" />\r\n  <button className=\"button\" onClick={()=>{\r\n  props.handleSubmit(item)\r\n  setItem(\"\")\r\n  }}>\r\n    <span>Add</span>\r\n  </button>\r\n</div>\r\n<div>\r\n  <ul>\r\n    {props.itemList.map((todoItem,index) =>{\r\n      return(\r\n        <div key={index} >\r\n      <li key={index}>{todoItem} <button onClick={()=>(handleDelete(todoItem))} className=\"deleteButton\">X</button></li>\r\n      \r\n      </div>\r\n    )})}\r\n\r\n\r\n\r\n  </ul>\r\n</div>\r\n</div>\r\n<br></br>\r\n<button onClick={()=>(props.handleDeleteAccount())} className=\"button Delbtn\"><span>Delete Account</span></button>\r\n<button onClick={()=>(props.handleLogout())} className=\"button\"> <span>Logout</span></button>\r\n\r\n</div>\r\n)\r\n\r\n}\r\n\r\nexport default Body;","import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\"\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction SignUp(props){\r\n    const [user,setUser]=useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    })\r\n\r\n\r\n    const [redirect,setRedirect]=useState(false);\r\n    const [err,setErr]=useState(\"\")\r\n\r\n\r\nfunction handleChange(event){\r\n        var {name,value}=event.target;\r\n          \r\n    setUser((pre)=>{\r\n           return {\r\n             ...pre,\r\n            [name]:value\r\n           }\r\n        \r\n        })\r\n}\r\n\r\n\r\n            \r\n    function handleSubmit(){\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n            email:user.email,\r\n            password:user.password\r\n            })\r\n            };\r\n          fetch('https://todo-backend-cx73.onrender.com/signup', options)\r\n          .then(response => response.json())\r\n          .then(data =>{\r\n\r\n            if(data.err){\r\n             \r\n              setErr(data.err)\r\n            }\r\n\r\n            else{\r\n              props.setToken(data)\r\n               setRedirect(true)\r\n            }\r\n            \r\n          \r\n\r\n          \r\n           \r\n          });\r\n\r\n\r\n\r\n    }\r\n\r\n    if(redirect){\r\nreturn(\r\n \r\n     <Navigate to=\"/\"/>\r\n\r\n \r\n)\r\n    \r\n      \r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div>\r\n    \r\n    <section  className=\"vh-100 bg-image\"\r\n  style={{backgroundImage: \"url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp')\"}}>\r\n  <div className=\"mask d-flex align-items-center h-100 gradient-custom-3\">\r\n    <div className=\"container h-100\">\r\n\r\n      <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n        <div>\r\n          <div className=\"card\" style={{borderRadius: \"15px\"}}>\r\n            <div className=\"card-body p-5\">\r\n              <h2 className=\"text-uppercase text-center mb-5\">Create an account</h2>\r\n\r\n              <p style={{color:\"blue\"}}>{err}</p>\r\n\r\n              <form>\r\n\r\n                {/* <div className=\"form-outline mb-4\">\r\n                  <input type=\"text\" id=\"form3Example1cg\" className=\"form-control form-control-lg\" />\r\n                  <label className=\"form-label\" for=\"form3Example1cg\">Your Name</label>\r\n                </div> */}\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                  <input onChange={handleChange} name=\"email\" type=\"email\" id=\"form3Example3cg\" className=\"form-control form-control-lg\" />\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3cg\">Your Email</label>\r\n                </div>\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                  <input onChange={handleChange} name=\"password\"   type=\"password\" id=\"form3Example4cg\" className=\"form-control form-control-lg\" />\r\n                  <label className=\"form-label\" htmlFor=\"form3Example4cg\">Password</label>\r\n                </div>\r\n\r\n                {/* <div className=\"form-outline mb-4\">\r\n                  <input type=\"password\" id=\"form3Example4cdg\" className=\"form-control form-control-lg\" />\r\n                  <label className=\"form-label\" for=\"form3Example4cdg\">Repeat your password</label>\r\n                </div> */}\r\n\r\n                {/* <div className=\"form-check d-flex justify-content-center mb-5\">\r\n                  <input className=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3cg\" />\r\n                  <label className=\"form-check-label\" for=\"form2Example3g\">\r\n                    I agree all statements in <a href=\"#!\" className=\"text-body\"><u>Terms of service</u></a>\r\n                  </label>\r\n                </div> */}\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <button type=\"button\" onClick={handleSubmit}\r\n                    className=\"btn btn-success btn-block btn-lg gradient-custom-4 text-body\">Register</button>\r\n                </div>\r\n\r\n                <p className=\"text-center text-muted mt-5 mb-0\">Have already an account? <a href=\"/\"\r\n                    className=\"fw-bold text-body\"><u>Login here</u></a></p>\r\n\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n    </div>\r\n    \r\n        )\r\n\r\n       \r\n          \r\n}\r\nSignUp.propTypes={\r\n    setToken:propTypes.func.isRequired\r\n  }\r\n\r\nexport default SignUp;","import React, { useEffect, useState } from \"react\";\nimport Login from \"./Login\";\nimport Body from \"./Body\";\nimport SignUp from \"./signUp\";\nimport useToken from \"./useToken\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom';\n\nfunction App() {\n\n\nconst [itemList, setItems] = useState([]);\n\nconst {token,setToken}=useToken()\n// localStorage.setItem('token',JSON.stringify(\"\"))\n\nuseEffect(()=>{\n  const options = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n        id:token\n        })\n        };\n  const fetchData=async()=>{\n    const response=await fetch('https://todo-backend-cx73.onrender.com/data',options);\n    const newData=await response.json();\n     setItems(newData.todos)\n   \n  }\n\n  if(token){\n    fetchData()\n  }\n \n},[itemList,token])\n\n\n function handleDeleteAccount(){\n\n  const requestOptions = {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n    id:token\n    })\n    };\n    \n\n   fetch('https://todo-backend-cx73.onrender.com/deleteaccount', requestOptions)\n    .then(localStorage.setItem('token', JSON.stringify(\"\")), setToken(\"\"))\n\n }\n \n\n\n\nfunction handleSubmit(item) {\n  const requestOptions = {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n    id:token,\n    item:item\n    })\n    };\n    \n\n   fetch('https://todo-backend-cx73.onrender.com/add', requestOptions)\n    .then(response => response.json())\n  .then(data =>{\n  console.log(data)\n   setItems(data[0].todos)\n     \n     \n   });\n\n   \n}\n\nfunction handleLogout(){\n  localStorage.setItem('token', JSON.stringify(\"\"));\n  setToken(\"\")\n}\n\n\n\n\n\n\n \n\nif(token){\n\n  return (\n    \n    <div>\n     \n    \n        <Router>\n    \n        <div>\n    \n        {/* <Navigate to=\"/\" ></Navigate> */}\n    \n    \n        {/* <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n         \n    \n          </ul> */}\n        <Routes>\n          <Route exact path='/' element={< Body handleLogout={handleLogout} handleSubmit={handleSubmit} itemList={itemList} token={token} handleDeleteAccount={handleDeleteAccount}/>}></Route>\n          \n         <Route exact path=\"/signup\" element={<SignUp setToken={setToken}/>}></Route>\n          {/* <Route exact path=\"/signup\" element={<SignUp/>}></Route> */}\n          {/* <Route exact path='/' element={< Login setItems={setItems}  />}></Route> */}\n        </Routes>\n      \n         </div>\n        </Router>\n    \n    \n    </div>\n      );\n    \n\n\n}\n\n\n\n  return (<div>\n  {/* <Login setItems={setItems} setToken={setToken}/> */}\n  <Router>\n  <div>\n  <Routes>\n     \n     <Route exact path=\"/\" element={<Login setItems={setItems} setToken={setToken}/>}></Route>\n    <Route exact path=\"/signup\" element={<SignUp setToken={setToken}/>}></Route>\n\n    </Routes>\n\n  </div>\n\n    \n\n\n  </Router>\n  \n  </div>)\n\n\n\n\n\n  \n\n}\n\n\n\nexport default App;\n","import  { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token') ;\r\n    const userToken = tokenString !== \"undefined\" ?JSON.parse(tokenString):null;\r\n    return userToken?._id\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken._id);\r\n  };\r\n\r\n  return {\r\n    setToken:saveToken,\r\n    token\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}